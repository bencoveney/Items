<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="Items" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

using System;

namespace GeneratedCode
{
<# foreach(Items.Thing thing in things) { #>
	/// <summary>
	/// <#= thing.Description ?? thing.Name #>
	/// </summary>
	partial class <#= thing.Name #>
	{
<# WriteConstructors(thing); #>
	}
<# } #>
}

<#+ public void WriteConstructors(Items.IThing thing){
	if(thing.IntegerIdentifier != null)
	{
#>
		public <#= thing.Name #>(<#= thing.IntegerIdentifier.DataType.Name #> <#= thing.IntegerIdentifier.Name #>)
		{
			// Assign the identifier dataMember
			this.<#= thing.IntegerIdentifier.Name #> = <#= thing.IntegerIdentifier.Name #>;
			
			// Provide a way of populating the others
			this.Populate += this.PopulateFromIntegerIdentifier;
		}

<#+ }
	if(thing.StringIdentifier != null) {
#>
		public <#= thing.Name #>(<#= thing.StringIdentifier.DataType.Name #> <#= thing.StringIdentifier.Name #>) {
			// Assign the identifier dataMember
			this.<#= thing.StringIdentifier.Name #> = <#= thing.StringIdentifier.Name #>;
			
			// Provide a way of populating the others
			this.Populate += this.PopulateFromStringIdentifier;
		}
<#+ }
#>
		public <#= thing.Name #>(<#+
			foreach(DataMember attribute in thing.Attributes) {
				#><#= attribute.DataType.Name #> <#= attribute.Name #><#+
				if(attribute != thing.Attributes.Last()) {
					#>, <#+
				}
			}
		#>)
		{
			// TODO: Assign datamembers
<#+
			foreach(DataMember attribute in thing.Attributes) { #>
			this.<#= attribute.Name #> = <#= attribute.Name #>;

			this.IsPopulated = true;
<#+
			} #>
		}
<#+ }
#>
